abstract class User {
	private String name;
	private String userId;
	private String email;
	private String phoneNum;

	public User(String name, String userId, String email, String phoneNum){
		this.name = name;
		this.userId = userId;
		this.email = email;
		this.phoneNum = phoneNum;
	}

	public String getName(){
		return name;
	}

	public String getUserId(){
		return userId;
	}

	public String getEmail(){
	    return email;
	}

	public String getPhoneNum(){
    		return phoneNum;
    }

	public void setName(String name){
		this.name = name;
	}

	public void setUserId(String userId){
		this.userId = userId;
	}

	public void setEmail(String email){
    		this.email = email;
    }

	public void setPhoneNum(String phoneNum){
        	this.phoneNum = phoneNum;
    }

    public void register();
    public void login();
    public void Logout();

}

class Customer extends User{
    String address;
    String paymentMethod;
    List<Order> orders;

    public Customer(String name, String userId, String email, String phoneNum, String address, String paymentMethod){
        super(name, userId, email, phoneNum);
        this.address = address;
        this.paymentMethod = paymentMethod;
        orders = new ArrayList<>();
    }

    public String getAddress(){
        return address;
    }

    public String getPaymentMethod(){
        return paymentMethod
    }

    public List<Order> getOrders(){
        return orders;
    }

    public void setAddress(String address){
        this.address = address;
    }

    public void setPaymentMethod(String paymentMethod){
        this.paymentMethod = paymentMethod;
    }

    pubilc void setOrders(List<Order> orders){
        this.orders = orders;
    }
    @Override
    public void register();

    @Override
    public void login();

    @Override
    public void logout();

    public void placeOrder(String orderId, String orderDate, String status, double totalCost){
        Order order = new order(orderId, orderDate, status, totalCost);
        Order.processPayment();
        Order.confirmOrder();
        Order.generateInvoice();
    }
    public void rateService();
}

class Admin extends User{

    public Admin(String name, String userId, String email, String phoneNum){
        super(name, userId, email, phoneNum);
    }
    @Override
    public void register();

    @Override
    public void login();

    @Override
    public void Logout();

    public void addAppliance();
    public void manageUsers();
    public void removeAppliance();
    public void viewReport();

}

Interface IDevice{
    public void rentOut(){}
    public void returnDevice(){}
    public float calculateRentalPrice(int days){
        rentalPrice = pricePerDay*days
        return rentalPrice
    }
}

class DeviceModel{
    String modelId;
    String name;
    double pricePerDay;

    public DeviceModel(String modelId, String name, double pricePerDay){
        this.modelId = modelId;
        this.name = name;
        this.pricePerDay = pricePerDay;
    }

    public String getModelId(){
        return modelId;
    }

    public String getName(){
    	return name;
    }

    public double getPricePerDay(){
        return pricePerDay;
    }

    public void setModelId(String modelId){
        this.modelId = modelId;
    }

    public void setName(String name){
        this.name = name;
    }

    public void setPricePerDay(float pricePerDay){
        this.pricePerDay = pricePerDay;
    }
}

class Device extends DeviceModel{
    int itemId;
    int serialNumber;
    bool status;
    DeviceModel model;

    public Device(int itemId, int serialNumber, bool status, DeviceModel model){
        this.itemId = itemId;
        this.serialNumber = serialNumber;
        this.status = status;
        this.model = model;
    }

    public int getItemId(){
        return itemId;
    }

    public int getSerialNumber(){
        return serialNumber;
    }

    public String getStatus(){
        if (status == true){
            return "Available";
        }
        else return "Not available";
    }

    public String getModel(){
        return model;
    }

    public void setItemId(int itemId){
        this.itemId = itemId;
    }

    public void setSerialNumber(int serialNumber){
        this.serialNumber = serialNumber;
    }

    public void setStatus(bool status){
        this.status = status;
    }

    public void setModel(DeviceModel model){
        this.model = model;
    }
}

class Order{
    String orderId;
    String orderDate;
    String status;
    double totalCost;

    public Order(String orderId, String orderDate, String status, double totalCost){
        this.orderId = orderId;
        this.orderDate = orderDate;
        this.status = status;
        this.totalCost = totalCost;
    }

    public String getOrderId(){
        return orderId;
    }

    public String getOrderDate(){
        return orderDate;
    }

    public String getStatus(){
        return status;
    }

    public double getTotalCost(){
        return totalCost;
    }

    public void setOrderId(String orderId){
        this.orderId = orderId;
    }

    public void setOrderDate(String orderDate){
        this.orderDate = orderDate;
    }

    public void setStatus(String status){
        this.status = status;
    }

    public double setTotalCost(double totalCost){
        this.totalCost = totalCost;
    }

    public void confirmOrder();
    public void processPayment();
    public void cancelOrder();
    public void generateInvoice();
}

void main(){
    PRINT
        Welcome to Ecotidy!
    CHOOSE USER
        Admin
        Customer
    IF ADMIN
        CHOOSE
            Admin.login()
            Admin.register()
            VALIDATE IF ADMIN (TRUE)
                MENU
                    Admin.addAppliance()
                    Admin.removeAppliance()
                    Admin.manageUsers()
                    Admin.viewReports()
                    Admin.logout()
            ELSE RETURN TO WELCOME PAGE
    ELSE IF CUSTOMER
        CHOOSE
            Customer.login()
            Customer.Regiter()
            VALIDATE IF CUSTOMER (TRUE)
                CHOOSE DEVICE CATEGORY
                    C1
                    C2
                    C3
                    C4
                    C5
                    C6
                    C7
                    C8
                    C9
                    CHOOSE DEVICE
                        D1
                        D2
                        D3
                        CHOOSE DAYS
                        Device.calculateRentalPrice(int days);
                        Device.rentOut();
                        Customer.placeOrder();
                        RETURN TO MENU
                            CHOOSE
                                Another order
                                Customer.logout()
            ELSE RETURN TO WELCOME PAGE
}

